-- üîß L√âP√âS 1: ENUM JAV√çT√ÅS - DISABLED ROLE HOZZ√ÅAD√ÅSA
-- M√°solj be ezt a k√≥dot EL≈êSZ√ñR a Supabase Dashboard > SQL Editor-be

-- ==========================================
-- USER_ROLE ENUM JAV√çT√ÅS - DISABLED ROLE HOZZ√ÅAD√ÅSA
-- ==========================================

-- Ellen≈ërizz√ºk az enum jelenlegi √©rt√©keit
SELECT 'BEFORE enum update' as step, unnest(enum_range(NULL::user_role)) AS current_role_values;

-- Hozz√°adjuk a 'disabled' √©rt√©ket az enum-hoz (ha m√©g nincs benne)
DO $$
BEGIN
    -- Ellen≈ërizz√ºk, hogy a 'disabled' √©rt√©k m√°r l√©tezik-e
    IF NOT EXISTS (
        SELECT 1 FROM pg_enum 
        WHERE enumlabel = 'disabled' 
        AND enumtypid = (SELECT oid FROM pg_type WHERE typname = 'user_role')
    ) THEN
        -- Hozz√°adjuk a 'disabled' √©rt√©ket
        ALTER TYPE user_role ADD VALUE 'disabled';
        RAISE NOTICE 'SUCCESS: Added ''disabled'' to user_role enum';
    ELSE
        RAISE NOTICE 'INFO: ''disabled'' already exists in user_role enum';
    END IF;
END $$;

-- Ellen≈ërizz√ºk az enum friss√≠tett √©rt√©keit
SELECT 'AFTER enum update' as step, unnest(enum_range(NULL::user_role)) AS updated_role_values;

-- Dokument√°ljuk a v√°ltoztat√°st
COMMENT ON TYPE user_role IS 'User roles: admin, user, disabled (soft deleted)';

-- ==========================================
-- VALID√ÅCI√ì
-- ==========================================

-- Tesztelj√ºk, hogy tudunk-e disabled role-lal dolgozni
DO $$
BEGIN
    -- Pr√≥b√°ljunk meg egy tesztet csin√°lni disabled role-lal
    PERFORM 'disabled'::user_role;
    RAISE NOTICE 'SUCCESS: disabled role can be cast to user_role enum';
EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'ERROR: disabled role cannot be cast: %', SQLERRM;
END $$;

-- ==========================================
-- K√ñVETKEZ≈ê L√âP√âS
-- ==========================================

SELECT 
    '‚úÖ ENUM JAV√çT√ÅS K√âSZ!' as status,
    'Most futtasd le a supabase-sql-functions-only.sql f√°jlt!' as next_step;

-- PROFILES T√ÅBLA ELLEN≈êRZ√âSE
-- Ez a script ellen≈ërzi, hogy a profiles t√°bla megfelel≈ëen lett-e l√©trehozva

-- ==========================================
-- 1. T√ÅBLA L√âTEZ√âS√âNEK ELLEN≈êRZ√âSE
-- ==========================================

SELECT 
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.tables 
            WHERE table_schema = 'public' AND table_name = 'profiles'
        ) 
        THEN '‚úÖ PROFILES T√ÅBLA L√âTEZIK'
        ELSE '‚ùå PROFILES T√ÅBLA NEM L√âTEZIK - FUTTASD LE A create_profiles_table.sql SCRIPTET!'
    END as table_status;

-- ==========================================
-- 2. OSZLOPOK ELLEN≈êRZ√âSE
-- ==========================================

-- ProfileFormData mez≈ëk ellen≈ërz√©se
SELECT 
    'display_name' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'display_name'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'full_name' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'full_name'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'height' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'height'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'weight' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'weight'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'birthdate' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'birthdate'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'gender' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'gender'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'fitness_goals' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'fitness_goals'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status
UNION ALL
SELECT 
    'experience_level' as expected_column,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'experience_level'
        ) 
        THEN '‚úÖ L√âTEZIK' 
        ELSE '‚ùå HI√ÅNYZIK' 
    END as status;

-- ==========================================
-- 3. TELJES T√ÅBLA STRUKT√öRA
-- ==========================================

SELECT 
    column_name, 
    data_type, 
    is_nullable, 
    column_default,
    CASE 
        WHEN column_name IN ('display_name', 'full_name', 'height', 'weight', 'birthdate', 'gender', 'fitness_goals', 'experience_level') 
        THEN '‚úÖ ProfileFormData mez≈ë'
        WHEN column_name IN ('id', 'created_at', 'updated_at')
        THEN '‚öôÔ∏è  Rendszer mez≈ë'
        ELSE '‚ùì Egy√©b mez≈ë'
    END as field_type
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'profiles'
ORDER BY ordinal_position;

-- ==========================================
-- 4. RLS POLICY-K ELLEN≈êRZ√âSE
-- ==========================================

SELECT 
    policyname,
    cmd as operation,
    CASE 
        WHEN policyname LIKE '%view%' THEN 'üëÅÔ∏è  Olvas√°s'
        WHEN policyname LIKE '%update%' THEN '‚úèÔ∏è  M√≥dos√≠t√°s'
        WHEN policyname LIKE '%insert%' THEN '‚ûï Besz√∫r√°s'
        ELSE 'üîß Egy√©b'
    END as policy_type,
    qual as condition
FROM pg_policies 
WHERE schemaname = 'public' AND tablename = 'profiles';

-- ==========================================
-- 5. INDEXEK ELLEN≈êRZ√âSE
-- ==========================================

SELECT 
    indexname,
    CASE 
        WHEN indexname LIKE '%experience_level%' THEN '‚ö° Experience Level index'
        WHEN indexname LIKE '%gender%' THEN '‚ö° Gender index'
        WHEN indexname LIKE '%updated_at%' THEN '‚ö° Updated At index'
        WHEN indexname LIKE '%pkey%' THEN 'üîë Primary Key'
        ELSE 'üìä Egy√©b index'
    END as index_type
FROM pg_indexes 
WHERE schemaname = 'public' AND tablename = 'profiles';

-- ==========================================
-- 6. TRIGGER ELLEN≈êRZ√âSE
-- ==========================================

SELECT 
    trigger_name,
    event_manipulation as trigger_event,
    action_timing,
    CASE 
        WHEN trigger_name LIKE '%sync_names%' THEN 'üîÑ Name szinkroniz√°l√°s'
        ELSE '‚öôÔ∏è  Egy√©b trigger'
    END as trigger_purpose
FROM information_schema.triggers
WHERE event_object_schema = 'public' 
  AND event_object_table = 'profiles';

-- ==========================================
-- 7. F√úGGV√âNYEK ELLEN≈êRZ√âSE
-- ==========================================

SELECT 
    routine_name,
    routine_type,
    CASE 
        WHEN routine_name LIKE '%sync_display_name%' THEN 'üîÑ Name szinkroniz√°l√°s f√ºggv√©ny'
        WHEN routine_name LIKE '%create_user_profile%' THEN 'üë§ Profil l√©trehoz√°s f√ºggv√©ny'
        ELSE '‚öôÔ∏è  Egy√©b f√ºggv√©ny'
    END as function_purpose
FROM information_schema.routines
WHERE routine_schema = 'public'
  AND routine_name IN ('sync_display_name_to_full_name', 'create_user_profile');

-- ==========================================
-- 8. √ñSSZES√çT≈ê ELLEN≈êRZ√âS
-- ==========================================

SELECT 
    'üéØ PROFILES T√ÅBLA K√âSZ√úLTS√âG' as status_category,
    CASE 
        WHEN (
            SELECT COUNT(*) 
            FROM information_schema.columns 
            WHERE table_schema = 'public' 
              AND table_name = 'profiles'
              AND column_name IN ('display_name', 'full_name', 'height', 'weight', 'birthdate', 'gender', 'fitness_goals', 'experience_level')
        ) = 8 
        THEN '‚úÖ MINDEN PROFILEFORMDATA MEZ≈ê L√âTEZIK'
        ELSE '‚ùå HI√ÅNYOZNAK PROFILEFORMDATA MEZ≈êK'
    END as result
UNION ALL
SELECT 
    'üîê RLS BIZTONS√ÅGI SZAB√ÅLYOK' as status_category,
    CASE 
        WHEN (SELECT COUNT(*) FROM pg_policies WHERE schemaname = 'public' AND tablename = 'profiles') >= 3
        THEN '‚úÖ RLS POLICY-K AKT√çVAK'
        ELSE '‚ùå HI√ÅNYOZNAK RLS POLICY-K'
    END as result
UNION ALL
SELECT 
    'üîÑ NAME SZINKRONIZ√ÅL√ÅS TRIGGER' as status_category,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.triggers
            WHERE event_object_schema = 'public' 
              AND event_object_table = 'profiles'
              AND trigger_name = 'sync_names_trigger'
        )
        THEN '‚úÖ TRIGGER AKT√çV'
        ELSE '‚ùå TRIGGER HI√ÅNYZIK'
    END as result;
